/// enemy_slime.cpp â€” Forest Slime enemy implementation

#include "enemy_slime.hpp"
#include <algorithm>
#include <cmath>
#include <vector>

namespace enemy {

// Slime specifications according to WORLDBUILDING.MD
const EnemySpec SLIME_SPEC = {
    .id = EnemyID::FOR_SLIME,
    .size = {32.0f, 32.0f},  // 1x1 tile
    .hp = 2,                 // 2 pips of health
    .dmg = 1,                // 1 pip of damage
    .speed = 60.0f,          // 60 pixels per second
    .behaviors = {BehaviorAtom::wander_random, BehaviorAtom::chase_player},
    .drops = {{DropType::Heart, 30}, {DropType::Coin, 70}}
};

// Slime instance data structure
struct SlimeInstance {
    Vector2 position;
    int hp;
    Rectangle collision_rect;
    Color color;
    WanderRandom wander;
    ChasePlayer chase;
    bool active;
    
    SlimeInstance(Vector2 pos)
        : position(pos), 
          hp(SLIME_SPEC.hp), 
          collision_rect({pos.x, pos.y, SLIME_SPEC.size.x, SLIME_SPEC.size.y}),
          color(GREEN),
          wander(100.0f, 1.0f),    // Wander within 100px, idle for 1 second
          chase(256.0f),           // Detect player within 256px
          active(true) {}
};

// All active slime instances
static std::vector<SlimeInstance> slimes;

// More implementation will go here

} // namespace enemy 